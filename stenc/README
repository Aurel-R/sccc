Compilateur stenc

$ make
$ ./stenc < test/testX.stenc > test/testX.s
$ spim -file test/testX.s -execute test/testX.s

Propriétés de la grammaire (liste non exhaustive) :
- une seule fonction supportée (main, sans argument)
- un seul type (int) 
- pas de type abstrait (struct union enum)
- tableaux à 1 ou 2 dimensions uniquement
- pas de virgules
- les variables sont toutes globales
- pas d'évaluation conditionnelle d'id ou d'entier ( int x = 1; if (x) { ... } ) 
- pas de 'else if'
- chaque structure conditionelle (boucle, if, etc) doit être suivie de bloc '{' '}' 
- pas de label ni de goto
- pas de switch case
- pas de break; continue;
- bloc 'anonyme' non recommandé ( int main() { int x = 1;  { /* empty (or not) bloc */ }  return x;}
- commantaires AINSI (/* */) non supportés
- pas d'opérateur Unaire : &, |, ^, ~
- pas de support pour les expr de type += -= *= /= |= &= ^=
- pas d'opétateur ternaire ( y = ( x == 13) ? x - z : x + z; )
- variables initialisées à 0 par défaut (sauf pour les tableaux)
- la grammaire possède un operateur 'print(id);'
- aucune action associée à la production 'return' 
- la fonction principale (main) retourne donc 0 par défaut
